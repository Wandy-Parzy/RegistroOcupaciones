@page "/R_ocupaciones"
@inject OcupacionesBLL OcupacionesBLL
@inject NotificationService NotificationService

<EditForm Model="ocupacion" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="card">
        <div class="card-header">
            <h3>Registro de ocupaciones</h3>
        </div>
        <div class="card-body">

            @*OcupacionId*@
            <div class="form-r ow align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>OcupacionId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="ocupacion.OcupacionId" class="form-control col-4" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*Descripcion*@
            <div class="form-group">
                <label>Descripcion</label>
                <InputText @bind-Value="ocupacion.Descripcion" class="form-control" />
                <ValidationMessage For="@(() => ocupacion.Descripcion)" />
            </div>

            @*Salario*@
            <div class="form-group">
                <label>Salario</label>
                <InputNumber @bind-Value="ocupacion.Salario" class="form-control" />
                <ValidationMessage For="@(() => ocupacion.Salario)" />
            </div>
            
     

        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public int OcupacionId { get; set; }
    public Ocupaciones ocupacion { get; set; } = new Ocupaciones();

    public List<Ocupaciones> lista { get; set; } = new List<Ocupaciones>();

    protected override void OnInitialized()
    {
        if (OcupacionId > 0)
        {
            //si recibimos una {OcupacionId:int} por parametro asignarla
            // y luego buscarla para que se vea en pantalla
            this.ocupacion.OcupacionId = OcupacionId;
            this.Buscar();
        }
    }

    public void Nuevo()
    {
        ocupacion = new Ocupaciones();
    }

    bool Validar()
    {
        return ocupacion.Descripcion.Contains(".");
    }

    public void Guardar()
    {

        bool guardado = OcupacionesBLL.Guardar(ocupacion);

        if (guardado)
        {
            Nuevo();
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });
            
        }
        else
        {
            
        }
    }
    private void Buscar()
    {
        if (ocupacion.OcupacionId > 0)
        {
            var encontrado = OcupacionesBLL.Buscar(ocupacion.OcupacionId);

            if (encontrado != null)
                this.ocupacion = encontrado;
        }
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = OcupacionesBLL.Eliminar(ocupacion);

        if (elimino)
        {
            Nuevo();
        }
    }

      void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);

    }

}