@page "/R_personas"
@inject PersonaBLL personaBLL
@inject NotificationService NotificationService
<EditForm Model="personas" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="card">
        <div class="card-header">
            <h3>Registro de personas</h3>
        </div>
        <div class="card-body">

            @*PersonaId*@
            <div class="form-r ow align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>PersonaId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="personas.PersonaId" class="form-control col-4" />
                            <div class="input-group-append">
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary input-group-text"
                                        @onclick="Buscar">Buscar</button>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*Nombre*@
                <div class="form-group">
                    <label>Nombre</label>
                    <InputText @bind-Value="personas.Nombre" class="form-control" />
                    <ValidationMessage For="@(() => personas.Nombre)" />
                </div>

                @*Telefono*@
                <div class="form-group">
                    <label>Telefono</label>
                    <InputNumber @bind-Value="personas.Telefono" class="form-control" />
                    <ValidationMessage For="@(() => personas.Telefono)" />
                </div>

                @*Celular*@
                <div class="form-group">
                    <label>Celular</label>
                    <InputNumber @bind-Value="personas.Celular" class="form-control" />
                    <ValidationMessage For="@(() => personas.Celular)" />
                </div>
                @*Email*@
                <div class="form-group">
                    <label>Email</label>
                    <InputText @bind-Value="personas.Email" class="form-control" />
                    <ValidationMessage For="@(() => personas.Email)" />
                </div>

                @*Direccion*@
                <div class="form-group">
                    <label>Direccion</label>
                    <InputText @bind-Value="personas.Direccion" class="form-control" />
                    <ValidationMessage For="@(() => personas.Direccion)" />
                </div>

                @*FechaNacimiento*@
                <div class="input-group">
                    <span class="input-group-text">Fecha</span>
                    <input type="date" @bind-value="personas.FechaNacimiento" />
                </div>
                <ValidationMessage For="@(() => personas.FechaNacimiento)" />

                @*OcupacionID*@
                <div class="form-group">
                    <label>OcupacionId</label>
                    <div class="input-group">
                        <InputNumber @bind-Value="personas.OcupacionId" class="form-control col-4" />
                        <div class="input-group-append">
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text"
                                    @onclick="Buscar">Buscar</button>
                             </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                    <button type="submit" class="btn btn-lg btn-success">Editar</button>
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>
@code {
    [Parameter]

    public Ocupaciones ocupacion { get; set; } = new Ocupaciones();
    public Persona personas { get; set; } = new Persona();

    public List<Ocupaciones> lista = new List<Ocupaciones>();
    public int OcupacionId { get; set; }

    public int personaId { get; set; }
    public string Filtro { get; set; } = "";
    public string Criterio { get; set; } = "";


    public String mensaje { get; set; } = "";

    protected override void OnInitialized()
    {
        base.OnInitialized();
      
    }

    private void Nuevo()
    {
        ocupacion = new Ocupaciones();
    }

    private void Buscar()
    {
        if (ocupacion.OcupacionId > 0)
        {
              var encontrado = personaBLL.Buscar(ocupacion.OcupacionId);
            Nuevo();
            if (encontrado != null)
                this.personas = encontrado;
            else
            {
            }  

        }
    }

    public void Guardar()
    {
        var guardado = personaBLL.Guardar(personas);

        if (guardado)
        {
            Nuevo();
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });
        }
        else
        {

        }

    }

     public void Eliminar()
    {
        bool elimino;

        elimino = personaBLL.Eliminar(personas);

        if (elimino)
        {
            Nuevo();
            //toast.ShowSuccess("Eliminado correctamente");
        }
        // else
        // toast.ShowError("No fue posible eliminar");
    }
     void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);

    }
}